// <auto-generated />
using System;
using Infrastucture.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastucture.Data.Migrations
{
    [DbContext(typeof(InventarioContext))]
    partial class InventarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Estities.Estado", b =>
                {
                    b.Property<string>("CodEstado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodPais")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("NomEstado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CodEstado");

                    b.HasIndex("CodPais");

                    b.ToTable("Estado", (string)null);
                });

            modelBuilder.Entity("Core.Estities.Log", b =>
                {
                    b.Property<int>("IdLog")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("date");

                    b.HasKey("IdLog");

                    b.ToTable("Log", (string)null);
                });

            modelBuilder.Entity("Core.Estities.Pais", b =>
                {
                    b.Property<string>("CodPais")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomPais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CodPais");

                    b.ToTable("Pais", (string)null);
                });

            modelBuilder.Entity("Core.Estities.Persona", b =>
                {
                    b.Property<string>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdRegion")
                        .HasColumnType("varchar(3)");

                    b.Property<int>("IdTipoPersona")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdPersona");

                    b.HasIndex("IdRegion");

                    b.HasIndex("IdTipoPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Core.Estities.PersonaProducto", b =>
                {
                    b.Property<string>("IdPersona")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("IdProducto")
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdPersona", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("PersonaProducto", (string)null);
                });

            modelBuilder.Entity("Core.Estities.Producto", b =>
                {
                    b.Property<string>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Precio")
                        .HasColumnType("double");

                    b.Property<int>("StockMaximo")
                        .HasColumnType("int");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("Core.Estities.Region", b =>
                {
                    b.Property<string>("CodRegion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodEstado")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("NomRegion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CodRegion");

                    b.HasIndex("CodEstado");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("Core.Estities.TipoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoPersona", (string)null);
                });

            modelBuilder.Entity("Core.Estities.Estado", b =>
                {
                    b.HasOne("Core.Estities.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("CodPais");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Core.Estities.Persona", b =>
                {
                    b.HasOne("Core.Estities.Region", "Region")
                        .WithMany("Personas")
                        .HasForeignKey("IdRegion");

                    b.HasOne("Core.Estities.TipoPersona", "TipoPersona")
                        .WithMany("Personas")
                        .HasForeignKey("IdTipoPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("Core.Estities.PersonaProducto", b =>
                {
                    b.HasOne("Core.Estities.Persona", "Personas")
                        .WithMany("PersonaProductos")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Estities.Producto", "Productos")
                        .WithMany("PersonaProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personas");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Core.Estities.Region", b =>
                {
                    b.HasOne("Core.Estities.Estado", "Estado")
                        .WithMany("Regiones")
                        .HasForeignKey("CodEstado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Core.Estities.Estado", b =>
                {
                    b.Navigation("Regiones");
                });

            modelBuilder.Entity("Core.Estities.Pais", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("Core.Estities.Persona", b =>
                {
                    b.Navigation("PersonaProductos");
                });

            modelBuilder.Entity("Core.Estities.Producto", b =>
                {
                    b.Navigation("PersonaProductos");
                });

            modelBuilder.Entity("Core.Estities.Region", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Core.Estities.TipoPersona", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
